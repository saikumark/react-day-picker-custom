{"ast":null,"code":"var _jsxFileName = \"C:\\\\wamp64\\\\www\\\\reactapp\\\\react-calendar-custom\\\\src\\\\App.js\";\nimport React, { Component } from 'react';\nimport DayPicker from 'react-day-picker';\nimport 'react-day-picker/lib/style.css';\nimport './App.css';\nconst today = new Date();\nconst currentYear = today.getFullYear();\nconst fromMonth = new Date(currentYear, today.getMonth());\nconst toMonth = new Date(today.setMonth(today.getMonth() + 1)); // console.log(fromMonth);\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      date: new Date(),\n      month: fromMonth\n    };\n    this.handleDayClick = this.handleDayClick.bind(this);\n    this.handleYearMonthChange = this.handleYearMonthChange.bind(this);\n    this.state = {\n      selectedDay: undefined,\n      month: fromMonth\n    };\n  }\n\n  handleDayClick(day, modifiers = {}) {\n    let errorDiv = document.getElementById(\"errorMessage\");\n\n    if (modifiers.disabled) {\n      errorDiv.innerHTML = \"Appointment is not available for the selected day\";\n      return;\n    } else {\n      errorDiv.innerHTML = \"Appointment available\";\n    }\n\n    this.setState({\n      selectedDay: modifiers.selected ? undefined : day\n    });\n  }\n\n  handleYearMonthChange(month) {\n    alert(month);\n    this.setState({\n      month: month\n    });\n  }\n\n  render() {\n    const modifiersStyles = {\n      disabled: {\n        backgroundColor: '#fff',\n        color: '#B2B2B2'\n      },\n      outside: {\n        backgroundColor: '#fff'\n      },\n      selected: {\n        backgroundColor: '#003087'\n      }\n    };\n\n    const getDisabledDays = (month, year) => {\n      let date = new Date(year, month - 1, 1);\n      let today = new Date();\n      const disabledDays = [];\n      const excludeDateArray = [\"12/3/2019\", \"12/13/2019\", \"1/1/2020\"]; // console.log(date.getMonth());\n      // console.log(new Date(this.state.month).getMonth());\n\n      while (date.getMonth() === new Date(this.state.month).getMonth()) {\n        if (date.getTime() < today.getTime() && date.toLocaleDateString() != today.toLocaleDateString()) {\n          disabledDays.push(new Date(date));\n        }\n\n        if (date.getDay() === 0 || date.getDay() === 6) {\n          disabledDays.push(new Date(date));\n        } else if (excludeDateArray.find(excludedDate => {\n          // console.log(excludedDate + \" ==> \"+date.toLocaleDateString());\n          return excludedDate == date.toLocaleDateString();\n        })) {\n          disabledDays.push(new Date(date));\n        }\n\n        date.setDate(date.getDate() + 1);\n      } // console.log(enabledDays)\n\n\n      return disabledDays;\n    };\n\n    console.log(this.state.month);\n    const disabledDays = getDisabledDays(this.state.month);\n    const allDay = `.DayPicker-Day {\n      background-color: #CBE6B1;\n      color: white;\n    }`;\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"calendar\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, React.createElement(\"style\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, allDay), React.createElement(DayPicker, {\n      onMonthChange: this.handleYearMonthChange,\n      month: this.state.month,\n      fromMonth: fromMonth,\n      toMonth: toMonth,\n      modifiersStyles: modifiersStyles,\n      disabledDays: disabledDays,\n      onDayClick: this.handleDayClick,\n      selectedDays: this.state.selectedDay,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    })), React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }, \"I'm react App\"), React.createElement(\"div\", {\n      id: \"errorMessage\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:/wamp64/www/reactapp/react-calendar-custom/src/App.js"],"names":["React","Component","DayPicker","today","Date","currentYear","getFullYear","fromMonth","getMonth","toMonth","setMonth","App","constructor","props","state","date","month","handleDayClick","bind","handleYearMonthChange","selectedDay","undefined","day","modifiers","errorDiv","document","getElementById","disabled","innerHTML","setState","selected","alert","render","modifiersStyles","backgroundColor","color","outside","getDisabledDays","year","disabledDays","excludeDateArray","getTime","toLocaleDateString","push","getDay","find","excludedDate","setDate","getDate","console","log","allDay"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport DayPicker from 'react-day-picker';\nimport 'react-day-picker/lib/style.css';\nimport './App.css';\n\nconst today = new Date();\nconst currentYear = today.getFullYear();\nconst fromMonth = new Date(currentYear, today.getMonth());\nconst toMonth = new Date(today.setMonth(today.getMonth()+1));\n// console.log(fromMonth);\nclass App extends Component{\n  constructor(props) {\n    super(props);\n    this.handleDayClick = this.handleDayClick.bind(this);\n    this.handleYearMonthChange = this.handleYearMonthChange.bind(this);\n    this.state = {\n      selectedDay: undefined,\n      month: fromMonth\n    };\n  }\n\n  state = {\n    date: new Date(),\n    month: fromMonth\n  }\n\n  handleDayClick(day, modifiers = {}) {\n    let errorDiv = document.getElementById(\"errorMessage\")\n\n    if (modifiers.disabled) {\n      errorDiv.innerHTML = \"Appointment is not available for the selected day\";\n      return;\n    }\n    else{\n      errorDiv.innerHTML = \"Appointment available\";\n    }\n    this.setState({\n      selectedDay: modifiers.selected ? undefined : day,\n    });\n  }\n\n  handleYearMonthChange(month) {\n    alert(month);\n    this.setState({ month:month });\n  }\n\n\n  render() {\n\n    const modifiersStyles = {\n      disabled:{\n        backgroundColor: '#fff',\n        color: '#B2B2B2'\n      },\n      outside: {\n        backgroundColor: '#fff'\n      },\n      selected: {\n        backgroundColor: '#003087'\n      },\n    };\n\n    const getDisabledDays = (month,year) => {\n      let date = new Date(year,month-1,1);\n      let today = new Date();\n      const disabledDays = [];\n      \n      const excludeDateArray = [\"12/3/2019\", \"12/13/2019\",\"1/1/2020\"];\n      // console.log(date.getMonth());\n      // console.log(new Date(this.state.month).getMonth());\n      while (date.getMonth() === new Date(this.state.month).getMonth()) {\n        if(date.getTime() < today.getTime() && date.toLocaleDateString()!=today.toLocaleDateString()){\n          disabledDays.push(new Date(date));\n        }\n        if(date.getDay() === 0 || date.getDay() === 6){\n          disabledDays.push(new Date(date));\n        }\n        else if(excludeDateArray.find((excludedDate) => {\n          // console.log(excludedDate + \" ==> \"+date.toLocaleDateString());\n            return excludedDate == date.toLocaleDateString();\n          })) \n        {\n            disabledDays.push(new Date(date));\n        }\n        date.setDate(date.getDate() + 1);\n      }\n      // console.log(enabledDays)\n      return disabledDays;\n    }\n\n    console.log(this.state.month);\n    const disabledDays = getDisabledDays(this.state.month);\n\n    const allDay = `.DayPicker-Day {\n      background-color: #CBE6B1;\n      color: white;\n    }`;\n\n    return (\n      <div className=\"App\">\n        <div className=\"calendar\">\n          <style>{allDay}</style>\n          <DayPicker\n            onMonthChange={this.handleYearMonthChange}\n            month={this.state.month}\n            fromMonth={fromMonth}\n            toMonth={toMonth}\n            modifiersStyles = {modifiersStyles}\n            disabledDays={disabledDays}\n            onDayClick={this.handleDayClick}\n            selectedDays={this.state.selectedDay}\n          />\n        </div>\n        <h1>I'm react App</h1>\n        <div id=\"errorMessage\"></div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}