{"ast":null,"code":"var _jsxFileName = \"C:\\\\wamp64\\\\www\\\\reactapp\\\\react-calendar-custom\\\\src\\\\App.js\";\nimport React, { Component } from 'react';\nimport DayPicker from 'react-day-picker';\nimport 'react-day-picker/lib/style.css';\nimport './App.css'; // console.log(fromMonth);\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      date: new Date(),\n      month: this.fromMonth\n    };\n    this.handleDayClick = this.handleDayClick.bind(this);\n    this.handleYearMonthChange = this.handleYearMonthChange.bind(this);\n    this.today = new Date();\n    this.currentYear = this.today.getFullYear();\n    this.fromMonth = new Date(this.currentYear, this.today.getMonth());\n    this.toMonth = new Date();\n    this.toMonth.setMonth(this.toMonth.getMonth() + 2);\n    this.state = {\n      selectedDay: undefined,\n      fromMonth: this.fromMonth,\n      month: this.toMonth\n    };\n    console.log(this.state);\n  }\n\n  handleDayClick(day, modifiers = {}) {\n    let errorDiv = document.getElementById(\"errorMessage\");\n\n    if (modifiers.disabled) {\n      errorDiv.innerHTML = \"Appointment is not available for the selected day\";\n      return;\n    } else {\n      errorDiv.innerHTML = \"Appointment available\";\n    }\n\n    this.setState({\n      selectedDay: modifiers.selected ? undefined : day\n    });\n  }\n\n  handleYearMonthChange(month) {\n    this.setState({\n      month: month\n    });\n  }\n\n  render() {\n    const modifiersStyles = {\n      disabled: {\n        backgroundColor: '#fff',\n        color: '#B2B2B2'\n      },\n      outside: {\n        backgroundColor: '#fff'\n      },\n      selected: {\n        backgroundColor: '#003087'\n      }\n    };\n\n    const getDisabledDays = selectedMonth => {\n      let date = new Date(selectedMonth);\n      const disabledDays = [];\n      const excludeDateArray = [\"12/3/2019\", \"12/13/2019\", \"1/1/2020\", \"2/3/2020\"];\n\n      while (date.getMonth() === new Date(this.state.month).getMonth()) {\n        if (date.getMonth() === this.today.getMonth()) {\n          if (date.getTime() < this.today.getTime() && date.toLocaleDateString() != this.today.toLocaleDateString()) {\n            disabledDays.push(new Date(date));\n          }\n        }\n\n        if (date.getDay() === 0 || date.getDay() === 6) {\n          disabledDays.push(new Date(date));\n        } else if (excludeDateArray.find(excludedDate => {\n          // console.log(excludedDate + \" ==> \"+date.toLocaleDateString());\n          return excludedDate == date.toLocaleDateString();\n        })) {\n          disabledDays.push(new Date(date));\n        }\n\n        date.setDate(date.getDate() + 1);\n      } // console.log(enabledDays)\n\n\n      return disabledDays;\n    };\n\n    console.log(this.state.month); // const disabledDays = getDisabledDays(12, 2019);\n\n    const disabledDays = getDisabledDays(this.state.month);\n    const allDay = `.DayPicker-Day {\n      background-color: #CBE6B1;\n      color: white;\n    }`;\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"calendar\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, React.createElement(\"style\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, allDay), React.createElement(DayPicker, {\n      onMonthChange: this.handleYearMonthChange,\n      month: this.state.month,\n      fromMonth: this.fromMonth,\n      toMonth: this.toMonth,\n      modifiersStyles: modifiersStyles,\n      disabledDays: disabledDays,\n      onDayClick: this.handleDayClick,\n      selectedDays: this.state.selectedDay,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    })), React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }, \"I'm react App\"), React.createElement(\"div\", {\n      id: \"errorMessage\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:/wamp64/www/reactapp/react-calendar-custom/src/App.js"],"names":["React","Component","DayPicker","App","constructor","props","state","date","Date","month","fromMonth","handleDayClick","bind","handleYearMonthChange","today","currentYear","getFullYear","getMonth","toMonth","setMonth","selectedDay","undefined","console","log","day","modifiers","errorDiv","document","getElementById","disabled","innerHTML","setState","selected","render","modifiersStyles","backgroundColor","color","outside","getDisabledDays","selectedMonth","disabledDays","excludeDateArray","getTime","toLocaleDateString","push","getDay","find","excludedDate","setDate","getDate","allDay"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport DayPicker from 'react-day-picker';\nimport 'react-day-picker/lib/style.css';\nimport './App.css';\n\n\n\n// console.log(fromMonth);\nclass App extends Component{\n  constructor(props) {\n    super(props);\n    this.handleDayClick = this.handleDayClick.bind(this);\n    this.handleYearMonthChange = this.handleYearMonthChange.bind(this);\n\n    this.today = new Date();\n    this.currentYear = this.today.getFullYear();\n    this.fromMonth = new Date(this.currentYear, this.today.getMonth());\n    this.toMonth = new Date();\n    this.toMonth.setMonth(this.toMonth.getMonth()+2);\n\n    this.state = {\n      selectedDay: undefined,\n      fromMonth: this.fromMonth,\n      month: this.toMonth\n\n    };\n\n    console.log(this.state);\n  }\n\n  state = {\n    date: new Date(),\n    month: this.fromMonth\n  }\n\n  handleDayClick(day, modifiers = {}) {\n    let errorDiv = document.getElementById(\"errorMessage\")\n\n    if (modifiers.disabled) {\n      errorDiv.innerHTML = \"Appointment is not available for the selected day\";\n      return;\n    }\n    else{\n      errorDiv.innerHTML = \"Appointment available\";\n    }\n    this.setState({\n      selectedDay: modifiers.selected ? undefined : day,\n    });\n  }\n\n  handleYearMonthChange(month) {\n    this.setState({ month:month });\n  }\n\n\n  render() {\n\n    const modifiersStyles = {\n      disabled:{\n        backgroundColor: '#fff',\n        color: '#B2B2B2'\n      },\n      outside: {\n        backgroundColor: '#fff'\n      },\n      selected: {\n        backgroundColor: '#003087'\n      },\n    };\n\n    const getDisabledDays = (selectedMonth) => {\n      let date = new Date(selectedMonth);\n      const disabledDays = [];\n      \n      const excludeDateArray = [\"12/3/2019\", \"12/13/2019\",\"1/1/2020\",\"2/3/2020\"];\n      while (date.getMonth() === new Date(this.state.month).getMonth()) {\n        if(date.getMonth() === this.today.getMonth()) {\n          if(date.getTime() < this.today.getTime() && date.toLocaleDateString()!=this.today.toLocaleDateString()){\n            disabledDays.push(new Date(date));\n          }\n        }\n        if(date.getDay() === 0 || date.getDay() === 6){\n          disabledDays.push(new Date(date));\n        }\n        else if(excludeDateArray.find((excludedDate) => {\n          // console.log(excludedDate + \" ==> \"+date.toLocaleDateString());\n            return excludedDate == date.toLocaleDateString();\n          })) \n        {\n            disabledDays.push(new Date(date));\n        }\n        date.setDate(date.getDate() + 1);\n      }\n      // console.log(enabledDays)\n      return disabledDays;\n    }\n\n    console.log(this.state.month);\n    // const disabledDays = getDisabledDays(12, 2019);\n     const disabledDays = getDisabledDays(this.state.month);\n\n    const allDay = `.DayPicker-Day {\n      background-color: #CBE6B1;\n      color: white;\n    }`;\n\n    return (\n      <div className=\"App\">\n        <div className=\"calendar\">\n          <style>{allDay}</style>\n          <DayPicker\n            onMonthChange={this.handleYearMonthChange}\n            month={this.state.month}\n            fromMonth={this.fromMonth}\n            toMonth={this.toMonth}\n            modifiersStyles = {modifiersStyles}\n            disabledDays={disabledDays}\n            onDayClick={this.handleDayClick}\n            selectedDays={this.state.selectedDay}\n          />\n        </div>\n        <h1>I'm react App</h1>\n        <div id=\"errorMessage\"></div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}